import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-01-09T17:55:16.290084469+01:00[Europe/Rome]
 * <br>
*  The generated test suite contains 24 tests
 * <br>
*  Covered targets: 72
 * <br>
*  Used time: 0h 5m 1s
 * <br>
*  Needed budget for current results: 98%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080/";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/ticket
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/ticket")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: Unable to find com.app.entity.Flight with id 357; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unable to find com.app.entity.Flight with id 357 (through reference chain: java.util.ArrayList[0]->com.app.entity.Ticket[\"flight\"]->com.app.entity.Flight$HibernateProxy$ZNLycaNo[\"name\"])"))
                .body("'path'", containsString("/api/ticket"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/route/{id}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/route/269")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("No class com.app.entity.Route entity with id 269 exists!"))
                .body("'path'", containsString("/api/route/269"));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/route
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/route")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: Unable to find com.app.entity.Airport with id 520; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unable to find com.app.entity.Airport with id 520 (through reference chain: java.util.ArrayList[0]->com.app.entity.Route[\"departureAirport\"]->com.app.entity.Airport$HibernateProxy$5bFBNaPH[\"name\"])"))
                .body("'path'", containsString("/api/route"));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/company/{id}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/company/325")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("No class com.app.entity.Company entity with id 325 exists!"))
                .body("'path'", containsString("/api/company/325"));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/plane
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/plane")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Unable to find com.app.entity.Company with id 1; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.app.entity.Company with id 1"))
                .body("'path'", containsString("/api/plane"));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/airport
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 534, " + 
                    " \"name\": \"\", " + 
                    " \"location\": \"RBIuk8\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/airport")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("query did not return a unique result: 47; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 47"))
                .body("'path'", containsString("/api/airport"));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/api/plane
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 503, " + 
                    " \"name\": \"D\", " + 
                    " \"numberOfSeats\": 631, " + 
                    " \"company\": { " + 
                    " \"name\": \"4JIy6\" " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/plane")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.app.entity.Plane.company -> com.app.entity.Company; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.app.entity.Plane.company -> com.app.entity.Company"))
                .body("'path'", containsString("/api/plane"));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/ticket/{id}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/ticket/-8486461645863278666")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("No class com.app.entity.Ticket entity with id -8486461645863278666 exists!"))
                .body("'path'", containsString("/api/ticket/-8486461645863278666"));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/flight
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/flight")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: (was java.lang.NullPointerException); nested exception is com.fasterxml.jackson.databind.JsonMappingException: (was java.lang.NullPointerException) (through reference chain: java.util.ArrayList[0]->com.app.entity.Flight[\"quotaFilledPercentage\"])"))
                .body("'path'", containsString("/api/flight"));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_with500() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/api/route
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 669, " + 
                    " \"name\": \"lbg6CYzQVVQ\", " + 
                    " \"departureAirport\": { " + 
                    " \"id\": -3560407812533529487, " + 
                    " \"name\": \"5\", " + 
                    " \"capacity\": 853, " + 
                    " \"location\": \"d9\" " + 
                    " }, " + 
                    " \"arrivalAirport\": { " + 
                    " \"name\": \"E0KCQptyByjeZ\", " + 
                    " \"capacity\": -1630846201 " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/route")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.app.entity.Route.arrivalAirport -> com.app.entity.Airport; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.app.entity.Route.arrivalAirport -> com.app.entity.Airport"))
                .body("'path'", containsString("/api/route"));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/airport/{id}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/airport/804")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: Unable to find com.app.entity.Airport with id 804; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unable to find com.app.entity.Airport with id 804 (through reference chain: com.app.entity.Airport$HibernateProxy$5bFBNaPH[\"name\"])"))
                .body("'path'", containsString("/api/airport/804"));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/route/{id}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/route/1532643314")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: Unable to find com.app.entity.Route with id 1532643314; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unable to find com.app.entity.Route with id 1532643314 (through reference chain: com.app.entity.Route$HibernateProxy$TD3HYdnX[\"name\"])"))
                .body("'path'", containsString("/api/route/1532643314"));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_with500() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/flight/{id}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/flight/1082525021")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("No class com.app.entity.Flight entity with id 1082525021 exists!"))
                .body("'path'", containsString("/api/flight/1082525021"));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/ticket/{id}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/ticket/671")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: Unable to find com.app.entity.Ticket with id 671; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unable to find com.app.entity.Ticket with id 671 (through reference chain: com.app.entity.Ticket$HibernateProxy$aKwaLLY8[\"ticketCode\"])"))
                .body("'path'", containsString("/api/ticket/671"));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/api/ticket
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"ticketCode\": \"ifhM5KXtjzhIM\", " + 
                    " \"flight\": { " + 
                    " \"name\": \"EX8nAee1y0p14\", " + 
                    " \"arrivalDateTime\": \"1986-08-27T10:37:33\", " + 
                    " \"quota\": 880, " + 
                    " \"quotaFilled\": 361, " + 
                    " \"quotaFilledPercentage\": 563, " + 
                    " \"route\": { " + 
                    " \"id\": 758, " + 
                    " \"name\": \"csU3Ry7\", " + 
                    " \"arrivalAirport\": { " + 
                    " \"name\": \"tCZt2D8YI\", " + 
                    " \"capacity\": 1369091633, " + 
                    " \"location\": \"GfV_goQJ0xC6K\" " + 
                    " } " + 
                    " }, " + 
                    " \"plane\": { " + 
                    " \"name\": \"es7J\", " + 
                    " \"numberOfSeats\": 585 " + 
                    " } " + 
                    " }, " + 
                    " \"isSold\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/ticket")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.app.entity.Ticket.flight -> com.app.entity.Flight; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.app.entity.Ticket.flight -> com.app.entity.Flight"))
                .body("'path'", containsString("/api/ticket"));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_with500() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/airport/{id}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/airport/29")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("No class com.app.entity.Airport entity with id 29 exists!"))
                .body("'path'", containsString("/api/airport/29"));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/flight/{id}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/flight/449")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: (was java.lang.NullPointerException); nested exception is com.fasterxml.jackson.databind.JsonMappingException: (was java.lang.NullPointerException) (through reference chain: com.app.entity.Flight$HibernateProxy$ZNLycaNo[\"quotaFilledPercentage\"])"))
                .body("'path'", containsString("/api/flight/449"));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_with500() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/plane/{id}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/plane/791")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("No class com.app.entity.Plane entity with id 791 exists!"))
                .body("'path'", containsString("/api/plane/791"));
    }
    
    
    @Test(timeout = 60000)
    public void test_18_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/plane/{id}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/plane/443")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: Unable to find com.app.entity.Plane with id 443; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unable to find com.app.entity.Plane with id 443 (through reference chain: com.app.entity.Plane$HibernateProxy$vLWF7Ruo[\"name\"])"))
                .body("'path'", containsString("/api/plane/443"));
    }
    
    
    @Test(timeout = 60000)
    public void test_19_with500() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/company/{id}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/company/-632093858")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: Unable to find com.app.entity.Company with id -632093858; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unable to find com.app.entity.Company with id -632093858 (through reference chain: com.app.entity.Company$HibernateProxy$ESF8NRaE[\"name\"])"))
                .body("'path'", containsString("/api/company/-632093858"));
    }
    
    
    @Test(timeout = 60000)
    public void test_20_with500() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/api/flight
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 455, " + 
                    " \"name\": \"Cyi\", " + 
                    " \"arrivalDateTime\": \"1946-07-13T17:42:15\", " + 
                    " \"duration\": 33, " + 
                    " \"quotaFilled\": 803, " + 
                    " \"quotaFilledPercentage\": 241, " + 
                    " \"route\": { " + 
                    " \"id\": 1582438576418883906, " + 
                    " \"name\": \"M1n1renCI\", " + 
                    " \"departureAirport\": { " + 
                    " \"id\": 408, " + 
                    " \"name\": \"4f3tbajf3Ep7Jtfq\" " + 
                    " } " + 
                    " }, " + 
                    " \"plane\": { " + 
                    " \"id\": 304, " + 
                    " \"name\": \"_QlkvQirt\", " + 
                    " \"company\": { " + 
                    " \"id\": 128, " + 
                    " \"name\": \"YwW1l8uzFFL80JHI\" " + 
                    " } " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/flight")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not write JSON: Unable to find com.app.entity.Route with id 1582438576418883906; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unable to find com.app.entity.Route with id 1582438576418883906 (through reference chain: com.app.entity.Flight[\"route\"]->com.app.entity.Route$HibernateProxy$TD3HYdnX[\"name\"])"))
                .body("'path'", containsString("/api/flight"));
    }
    
    
    @Test(timeout = 60000)
    public void test_21_with500() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/plane
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"JV0zM\", " + 
                    " \"numberOfSeats\": 539, " + 
                    " \"companyId\": 1838998893 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/plane")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Unable to find com.app.entity.Company with id 1838998893; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.app.entity.Company with id 1838998893"))
                .body("'path'", containsString("/api/plane"));
    }
    
    
    @Test(timeout = 60000)
    public void test_22_with500() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/company
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 299, " + 
                    " \"name\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/company")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("query did not return a unique result: 63; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 63"))
                .body("'path'", containsString("/api/company"));
    }
    
    
    @Test(timeout = 60000)
    public void test_23_with500() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/route
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"v\", " + 
                    " \"departureAirportId\": 70, " + 
                    " \"arrivalAirportId\": 223 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/route")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Unable to find com.app.entity.Airport with id 70"))
                .body("'path'", containsString("/api/route"));
    }


}
