import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-12-04T13:46:14.457124636+01:00[Europe/Rome]
 * <br>
*  The generated test suite contains 47 tests
 * <br>
*  Covered targets: 47
 * <br>
*  Used time: 0h 10m 0s
 * <br>
*  Needed budget for current results: 16%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static String baseUrlOfSut = "http://localhost:9966/petclinic/";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/pets")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pets"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        
        given().accept("text/html")
                .get(baseUrlOfSut + "/petclinic/error")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/petclinic/api/vets/545")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/vets/545"));
    }
    
    
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        
        given().accept("text/html")
                .post(baseUrlOfSut + "/petclinic/error")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 89, " + 
                    " \"name\": \"e\" " + 
                    " } ")
                .put(baseUrlOfSut + "/petclinic/api/specialties/89")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/specialties/89"));
    }
    
    
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        
        given().accept("*/*")
                .head(baseUrlOfSut + "/petclinic/")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/petclinic/api/specialties/364")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/specialties/364"));
    }
    
    
    @Test(timeout = 60000)
    public void test_7() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/owners/*/lastname/onn")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/owners/*/lastname/onn"));
    }
    
    
    @Test(timeout = 60000)
    public void test_8() throws Exception {
        
        given().accept("*/*")
                .head(baseUrlOfSut + "/petclinic/error")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_9() throws Exception {
        
        given().accept("text/html")
                .patch(baseUrlOfSut + "/petclinic/error")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_10() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/visits/-659612241")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/visits/-659612241"));
    }
    
    
    @Test(timeout = 60000)
    public void test_11() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 388, " + 
                    " \"pet\": { " + 
                    " \"birthDate\": \"2041-09-00T15:42:20\", " + 
                    " \"id\": 166, " + 
                    " \"owner\": { " + 
                    " \"address\": \"fPlX5dQngQG\", " + 
                    " \"city\": \"HTAUAiwV4VvB63F8\", " + 
                    " \"firstName\": \"0kjEKH73XK2w\", " + 
                    " \"lastName\": \"Tj6lLMsLjq4Db2Hc\", " + 
                    " \"pets\": [], " + 
                    " \"telephone\": \"SRlk4vdwf4\" " + 
                    " }, " + 
                    " \"visits\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/petclinic/api/visits")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/visits"));
    }
    
    
    @Test(timeout = 60000)
    public void test_12() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"description\": \"Pz7hd\", " + 
                    " \"pet\": { " + 
                    " \"id\": 835, " + 
                    " \"owner\": { " + 
                    " \"address\": \"D_H7iC4aAsHig\", " + 
                    " \"id\": 798, " + 
                    " \"lastName\": \"1\", " + 
                    " \"pets\": [] " + 
                    " }, " + 
                    " \"visits\": [] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/petclinic/api/visits/878")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/visits/878"));
    }
    
    
    @Test(timeout = 60000)
    public void test_13() throws Exception {
        
        given().accept("text/html")
                .put(baseUrlOfSut + "/petclinic/error")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_14() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/pets/pettypes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pets/pettypes"));
    }
    
    
    @Test(timeout = 60000)
    public void test_15() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/vets")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/vets"));
    }
    
    
    @Test(timeout = 60000)
    public void test_16() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"enabled\": false, " + 
                    " \"password\": \"0P_DiV_SraG\" " + 
                    " } ")
                .post(baseUrlOfSut + "/petclinic/api/users")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/users"));
    }
    
    
    @Test(timeout = 60000)
    public void test_17() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"\", " + 
                    " \"id\": 111, " + 
                    " \"pets\": [ " + 
                    " { " + 
                    " \"birthDate\": \"2068-02-06T07:19:00\", " + 
                    " \"id\": 260, " + 
                    " \"visits\": [ " + 
                    " { " + 
                    " \"date\": \"uYk1SrlUC\", " + 
                    " \"description\": \"PL\" " + 
                    " }, " + 
                    " { " + 
                    " \"date\": \"AYMk7LRN\", " + 
                    " \"id\": 896 " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1880585376, " + 
                    " \"visits\": [ " + 
                    " { " + 
                    " \"id\": 609 " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"\", " + 
                    " \"id\": 485 " + 
                    " }, " + 
                    " { " + 
                    " \"date\": \"NaumlU\" " + 
                    " }, " + 
                    " { " + 
                    " \"date\": \"hleR95aS\", " + 
                    " \"description\": \"uHC2XIKXbdF6o\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " { " + 
                    " \"type\": { " + 
                    " \"name\": \"kebZv7g0a82z9A\" " + 
                    " }, " + 
                    " \"visits\": [] " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 293, " + 
                    " \"name\": \"gX58Ztw_UoSH_9\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"\", " + 
                    " \"visits\": [] " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/petclinic/api/owners/111")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/owners/111"));
    }
    
    
    @Test(timeout = 60000)
    public void test_18() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"birthDate\": \"2088-12-10T-1:43:56\", " + 
                    " \"id\": 35, " + 
                    " \"name\": \"plTWjTqiLSqgf\", " + 
                    " \"owner\": { " + 
                    " \"address\": \"jA\", " + 
                    " \"firstName\": \"A\", " + 
                    " \"id\": 71, " + 
                    " \"lastName\": \"a2d\", " + 
                    " \"pets\": [] " + 
                    " }, " + 
                    " \"type\": {} " + 
                    " } ")
                .put(baseUrlOfSut + "/petclinic/api/pets/35")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pets/35"));
    }
    
    
    @Test(timeout = 60000)
    public void test_19() throws Exception {
        
        given().accept("*/*")
                .patch(baseUrlOfSut + "/petclinic/")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/"));
    }
    
    
    @Test(timeout = 60000)
    public void test_20() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"address\": \"jYUKOvzQ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/petclinic/api/owners")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/owners"));
    }
    
    
    @Test(timeout = 60000)
    public void test_21() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/vets/271")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/vets/271"));
    }
    
    
    @Test(timeout = 60000)
    public void test_22() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/owners/0")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/owners/0"));
    }
    
    
    @Test(timeout = 60000)
    public void test_23() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/pets/376")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pets/376"));
    }
    
    
    @Test(timeout = 60000)
    public void test_24() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/pettypes/552")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pettypes/552"));
    }
    
    
    @Test(timeout = 60000)
    public void test_25() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/petclinic/api/pets/62")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pets/62"));
    }
    
    
    @Test(timeout = 60000)
    public void test_26() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/visits")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/visits"));
    }
    
    
    @Test(timeout = 60000)
    public void test_27() throws Exception {
        
        given().accept("*/*")
                .put(baseUrlOfSut + "/petclinic/")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/"));
    }
    
    
    @Test(timeout = 60000)
    public void test_28() throws Exception {
        
        given().accept("text/html")
                .delete(baseUrlOfSut + "/petclinic/error")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_29() throws Exception {
        
        given().accept("*/*")
                .post(baseUrlOfSut + "/petclinic/")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/"));
    }
    
    
    @Test(timeout = 60000)
    public void test_30() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/petclinic/api/pettypes/165")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pettypes/165"));
    }
    
    
    @Test(timeout = 60000)
    public void test_31() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 693 " + 
                    " } ")
                .post(baseUrlOfSut + "/petclinic/api/pettypes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pettypes"));
    }
    
    
    @Test(timeout = 60000)
    public void test_32() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 476 " + 
                    " } ")
                .post(baseUrlOfSut + "/petclinic/api/specialties")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/specialties"));
    }
    
    
    @Test(timeout = 60000)
    public void test_33() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/pettypes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pettypes"));
    }
    
    
    @Test(timeout = 60000)
    public void test_34() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/petclinic/")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/"));
    }
    
    
    @Test(timeout = 60000)
    public void test_35() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 400, " + 
                    " \"name\": \"b\", " + 
                    " \"type\": { " + 
                    " \"id\": 319, " + 
                    " \"name\": \"6iDM\" " + 
                    " }, " + 
                    " \"visits\": [ " + 
                    " { " + 
                    " \"date\": \"zWyvVdm6A\", " + 
                    " \"description\": \"xDkk\" " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"hTLY34Xhx9c\" " + 
                    " }, " + 
                    " {}, " + 
                    " {}, " + 
                    " { " + 
                    " \"date\": \"e_KABt2W6wyHI\", " + 
                    " \"description\": \"nZP\", " + 
                    " \"id\": 760 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/petclinic/api/pets")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pets"));
    }
    
    
    @Test(timeout = 60000)
    public void test_36() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/petclinic/api/pettypes/881")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/pettypes/881"));
    }
    
    
    @Test(timeout = 60000)
    public void test_37() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/specialties")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/specialties"));
    }
    
    
    @Test(timeout = 60000)
    public void test_38() throws Exception {
        
        given().accept("text/html")
                .options(baseUrlOfSut + "/petclinic/error")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_39() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/owners")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/owners"));
    }
    
    
    @Test(timeout = 60000)
    public void test_40() throws Exception {
        
        given().accept("*/*")
                .options(baseUrlOfSut + "/petclinic/")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/"));
    }
    
    
    @Test(timeout = 60000)
    public void test_41() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 268, " + 
                    " \"lastName\": \"mNK\" " + 
                    " } ")
                .put(baseUrlOfSut + "/petclinic/api/vets/268")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/vets/268"));
    }
    
    
    @Test(timeout = 60000)
    public void test_42() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/petclinic/api/visits/-1484200630")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/visits/-1484200630"));
    }
    
    
    @Test(timeout = 60000)
    public void test_43() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"ab3RhA\", " + 
                    " \"specialties\": [ " + 
                    " { " + 
                    " \"id\": 213 " + 
                    " }, " + 
                    " {}, " + 
                    " { " + 
                    " \"id\": 4 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/petclinic/api/vets")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/vets"));
    }
    
    
    @Test(timeout = 60000)
    public void test_44() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/petclinic/api/specialties/963")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/specialties/963"));
    }
    
    
    @Test(timeout = 60000)
    public void test_45() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/petclinic/api/owners/290")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/api/owners/290"));
    }
    
    
    @Test(timeout = 60000)
    public void test_46() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/petclinic/")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/petclinic/petclinic/"));
    }


}
